# Generated by Django 4.0.4 on 2022-04-22 11:59

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Brand')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BySeriesLaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='By series')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Total Price')),
                ('in_order', models.BooleanField(default=False)),
                ('for_anonymous_user', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name category')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CPUCoreLaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='CPU Core')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CPULaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name processor laptop or computer')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CPUSmartphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name processor smartphone or computer')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CPUSpeedLaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='CPU Speed')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(default='owner.png', upload_to='icon/', verbose_name='Icon')),
                ('sequence', models.ImageField(default='sequence.jpg', upload_to='sequence/', verbose_name='Sequence')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('virtual_money', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Virtual money(erma)')),
            ],
        ),
        migrations.CreateModel(
            name='OperatingSystemLaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name operating system laptop or computer')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OperatingSystemSmartphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name operating system smartphone')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=14)),
                ('slug', models.CharField(max_length=130)),
                ('timeStamp', models.DateTimeField(blank=True)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Name')),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(upload_to='', verbose_name='Imagine')),
                ('description', models.TextField(null=True, verbose_name='description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('total_rating', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Rating Star product')),
                ('screen_size', models.CharField(blank=True, max_length=255, verbose_name='Screen size')),
                ('resolution', models.CharField(blank=True, max_length=255, verbose_name='Resolution')),
                ('cpu_speed', models.CharField(blank=True, max_length=255, verbose_name='CPU Speed')),
                ('cpu_core', models.CharField(blank=True, max_length=255, verbose_name='CPU Core')),
                ('storage_drive_size', models.CharField(blank=True, max_length=255, verbose_name='Storage drive size')),
                ('touch', models.BooleanField(default=True, verbose_name='Touch/Non Touch')),
                ('battery_charge', models.CharField(blank=True, max_length=255, verbose_name='Battery life')),
                ('diagonal', models.CharField(blank=True, max_length=255, verbose_name='Diagonal')),
                ('resolution_smartphone', models.CharField(blank=True, max_length=255, verbose_name='Resolution')),
                ('camera', models.CharField(blank=True, max_length=255, verbose_name='Camera')),
                ('type_screen', models.CharField(blank=True, max_length=255, verbose_name='Type screen')),
                ('battery_charge_smartphone', models.CharField(blank=True, max_length=255, verbose_name='Battery charge')),
                ('sd', models.BooleanField(blank=True, default=True, verbose_name='SD')),
                ('sd_volume_max', models.CharField(blank=True, max_length=255, verbose_name='Sd volume max')),
                ('color', models.CharField(blank=True, max_length=255, verbose_name='Color')),
                ('fit_type', models.CharField(blank=True, max_length=255, verbose_name='Fit type')),
                ('item_dimensions', models.CharField(blank=True, max_length=255, verbose_name='Item dimensions')),
                ('item_weight', models.CharField(blank=True, max_length=255, verbose_name='Item weight')),
                ('battery', models.CharField(blank=True, max_length=255, verbose_name='Batteries')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.brand', verbose_name='Brand')),
                ('by_series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.byserieslaptop', verbose_name='By series laptop')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.category', verbose_name='Category')),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Name code')),
                ('code', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Promo code')),
                ('percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Percent')),
                ('image_code', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Picture code')),
            ],
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name RUM')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RatingStar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(default=0, verbose_name='Rating Star')),
            ],
            options={
                'ordering': ['-value'],
            },
        ),
        migrations.CreateModel(
            name='ResolutionLaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Resolution')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScreenSizeLaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Screen Size')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VideoLaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Video Laptop')),
                ('slug', models.SlugField(allow_unicode=True, unique=True, verbose_name='Slug')),
            ],
        ),
        migrations.CreateModel(
            name='VideoSmartphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name video laptop or computer')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SaleProductLaptop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price Discount')),
                ('products_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product', verbose_name='Laptop(sale)')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_ip_rating', models.SmallIntegerField(blank=True, default=0, null=True, verbose_name='Total Rating Star')),
                ('laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product', verbose_name='Product laptop')),
                ('star', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ratingstar', verbose_name='Star')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='graphics',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.videolaptop', verbose_name='Graphics'),
        ),
        migrations.AddField(
            model_name='product',
            name='operating_system',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.operatingsystemlaptop', verbose_name='Operating system laptop'),
        ),
        migrations.AddField(
            model_name='product',
            name='operating_system_smartphone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Operating System Smartphone+', to='main.operatingsystemsmartphone'),
        ),
        migrations.AddField(
            model_name='product',
            name='processor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.cpulaptop', verbose_name='CPU laptop'),
        ),
        migrations.AddField(
            model_name='product',
            name='processor_smartphone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.cpusmartphone', verbose_name='CPU Smartphone'),
        ),
        migrations.AddField(
            model_name='product',
            name='ram',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.ram', verbose_name='Memory(RAM)'),
        ),
        migrations.AddField(
            model_name='product',
            name='ram_smartphone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RAM for smartphone+', to='main.ram', verbose_name='RAM(smartphone)'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last name')),
                ('phone', models.CharField(max_length=255, verbose_name='Phone')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('status', models.CharField(choices=[('new', 'New order'), ('in_progress', 'Order in progress'), ('is_ready', 'Order is ready'), ('completed', 'Order completed')], default='new', max_length=255, verbose_name='Status is order')),
                ('buying_type', models.CharField(choices=[('pickup', 'Pickup'), ('delivery', 'Delivery')], default='pickup', max_length=255, verbose_name='Order type')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Order comment')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('order_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date of receipt of the order')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.cart', verbose_name='Cart')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_orders', to='main.customer', verbose_name='Customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='orders',
            field=models.ManyToManyField(related_name='related_customer', to='main.order', verbose_name='Buyers orders'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer'),
        ),
        migrations.CreateModel(
            name='CompareProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=1)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product', verbose_name='Name product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Compare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('in_order', models.BooleanField(default=False)),
                ('for_anonymous_user', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Customer')),
                ('products', models.ManyToManyField(blank=True, related_name='related_cart', to='main.compareproduct')),
            ],
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=1)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Total Price')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_products', to='main.cart', verbose_name='Cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product', verbose_name='Name product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Customer')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.customer', verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='related_cart', to='main.cartproduct'),
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('timestamp', models.DateTimeField(default=datetime.datetime.today)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.blogcomment')),
                ('product_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
